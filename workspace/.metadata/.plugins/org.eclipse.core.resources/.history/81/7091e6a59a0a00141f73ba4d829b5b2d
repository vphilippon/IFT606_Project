package com.example.wifiapp;

import java.util.List;

import com.example.wifiapp.Tools.ButtonState.IdleScanState;
import com.example.wifiapp.Tools.ButtonState.ScanButtonState;
import com.example.wifiapp.Tools.Expandable.SlideAnimation;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.res.Configuration;
import android.net.wifi.ScanResult;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TableLayout;
import android.widget.TextView;


public class ScanActivity extends Activity {
	
	// Store a unique message using your package name to avoid conflicts
	// with other apps. This is used for debugging with Log and Logcat.
	public final static String TAG = "com.example.wifiapp";
	
	// Manages key valued pairs associated with stock symbols
	private SharedPreferences detectedNetworkPreferences;
	public final static String SHOW_MORE_SSID_KEY = "";
	public final static String SHOW_MORE_BSSID_KEY = "";
	public final static String SHOW_MORE_LEVEL_KEY = "";
	public final static String SHOW_MORE_FREQ_KEY = "";
	//public final static String SHOW_MORE_SSID_KEY = "";
	//public final static String SHOW_MORE_SSID_KEY = "";
	//public final static String SHOW_MORE_SSID_KEY = "";

	
	// Table inside the scroll view that holds stock symbols and buttons
	private TableLayout networkTableScrollView;
	
	private TextView scanResultCount;
	private WifiManager wifiManager;
	private Button scanActionButton;
	private Button deleteResultsButton;
	private ScanButtonState scanButtonState;
	
	private WifiScanReceiver scanResultReceiver;
	class WifiScanReceiver extends BroadcastReceiver {
		public void onReceive(Context c, Intent intent) {
			List<ScanResult> results = wifiManager.getScanResults();
			for (ScanResult scanResult : results){
				addNetworkToScrollView(scanResult);
			}
			
			updateNetworkCountHeader();
		}
	}
	
	private void addNetworkToScrollView(ScanResult scanResult){
		
		// Get the LayoutInflator service
		LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		View scanResultEntry = inflater.inflate(R.layout.scan_result_entry, null);
		
		Integer frequency = scanResult.frequency;
		Integer level = scanResult.level;
		
		// Add custom information into created view
		TextView scanEntrySSID = (TextView) scanResultEntry.findViewById(R.id.scan_entry_ssid);
		scanEntrySSID.setText(scanResult.SSID);
		
		int context = this
		scanEntrySSID.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				SlideAnimation.slideDown(this, this);
				
			}
		});
		
		/*Button scanShowMore = (Button) scanResultEntry.findViewById(R.id.scan_result_show_more);
		scanShowMore.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				Intent intent = new Intent(getApplicationContext(), DetailedScanResultActivity.class);
				intent.putExtra("", 2);
				startActivity(intent);
				
			}
		});
		
		TextView scanEntryBSSID = (TextView) scanResultEntry.findViewById(R.id.scan_entry_bssid);
		scanEntryBSSID.setText(scanResult.BSSID);*/
		
		// Add the new wifi configuration for the stock to the TableLayout
		networkTableScrollView.addView(scanResultEntry);
	}
	
	// OnClick button handler for scan button
	public void handleScanAction(View v)
	{
		scanButtonState.toogleText(scanActionButton);
		//scanButtonState.handleAction(this, );
		scanButtonState = scanButtonState.changeState();
		
		registerReceiver(scanResultReceiver, new IntentFilter(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION));
		wifiManager.startScan();
		
		//unregisterReceiver(scanResultReceiver);
	}
	
	// OnClick button handler for delete button
	public void deleteAllStocks(View v){
		networkTableScrollView.removeAllViews();
		
		SharedPreferences.Editor preferencesEditor = detectedNetworkPreferences.edit();
		preferencesEditor.clear();
		preferencesEditor.apply();
		
		updateNetworkCountHeader();
	}
	
	private void updateNetworkCountHeader(){
		Integer networkCount = networkTableScrollView.getChildCount();
		scanResultCount.setText(networkCount.toString());
	}
	
	private void saveStockSymbol(String newStock){
		
		// Used to check if this is a new stock
		String isTheStockNew = detectedNetworkPreferences.getString(newStock, null);
		
		// Editor is used to store a key / value pair
		// I'm using the stock symbol for both, but I could have used company
		// name or something else
		SharedPreferences.Editor preferencesEditor = detectedNetworkPreferences.edit();
		preferencesEditor.putString(newStock, newStock);
		preferencesEditor.apply();
		
	}
	
	
	// Set up the activity
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_scan);
		
		// Retrieve saved stocks entered by the user. 
		// MODE_PRIVATE: Only accessible by your app (Most Common)
		// MODE_WORLD_READABLE: Any app can read (Can OR with Following)
		// MODE_WORLD_WRITABLE: Any app can write to this
		detectedNetworkPreferences = getSharedPreferences("networkList", MODE_PRIVATE);
		
		// Initialize ativity components
		scanButtonState = new IdleScanState();
		scanResultReceiver = new WifiScanReceiver();
		scanResultCount = (TextView) findViewById(R.id.scan_result_header_count);
		networkTableScrollView = (TableLayout) findViewById(R.id.networkTableScrollView);
		wifiManager = (WifiManager)getApplicationContext().getSystemService(Context.WIFI_SERVICE);
		deleteResultsButton = (Button)findViewById(R.id.delete_scan_results_button);
		scanActionButton = (Button)findViewById(R.id.scan_action_button);
	}
		
	@Override
	public void onConfigurationChanged(Configuration newConfig) {
	  super.onConfigurationChanged(newConfig);
	  //setContentView(R.layout.activity_scan);
	}
}
